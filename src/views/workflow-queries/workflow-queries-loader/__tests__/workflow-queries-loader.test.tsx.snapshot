// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`WorkflowQueriesLoader renders without error 1`] = `
{
  "asFragment": [Function],
  "baseElement": <body>
    <div>
      <div
        class="style={
  '*, *::before, *::after': {
    '-moz-animation': 'none !important',
    '-moz-transition': ' none !important',
    animation: 'none !important',
    'caret-color': ' transparent !important',
    transition: ' none !important',
  },
}
"
      >
        <div
          class="style={
  columnGap: '32px',
  display: 'flex',
  flexDirection: 'row',
}
"
        >
          <div
            class="style={
  display: 'flex',
  flex: '1 0 300px',
  flexDirection: 'column',
  maxWidth: '450px',
  rowGap: '16px',
}
"
          >
            <div>
              <div>
                Mock tile: 
                __query_types
              </div>
              <button>
                Run
              </button>
            </div>
            <div>
              <div>
                Mock tile: 
                __open_sessions
              </div>
              <button>
                Run
              </button>
            </div>
          </div>
          <div
            class="style={ flex: '1 0 300px' }
"
          >
            <div>
              <div>
                Mock JSON
              </div>
              <div />
            </div>
          </div>
        </div>
      </div>
      <div
        class="style={}
"
      />
    </div>
  </body>,
  "container": <div>
    <div
      class="style={
  '*, *::before, *::after': {
    '-moz-animation': 'none !important',
    '-moz-transition': ' none !important',
    animation: 'none !important',
    'caret-color': ' transparent !important',
    transition: ' none !important',
  },
}
"
    >
      <div
        class="style={
  columnGap: '32px',
  display: 'flex',
  flexDirection: 'row',
}
"
      >
        <div
          class="style={
  display: 'flex',
  flex: '1 0 300px',
  flexDirection: 'column',
  maxWidth: '450px',
  rowGap: '16px',
}
"
        >
          <div>
            <div>
              Mock tile: 
              __query_types
            </div>
            <button>
              Run
            </button>
          </div>
          <div>
            <div>
              Mock tile: 
              __open_sessions
            </div>
            <button>
              Run
            </button>
          </div>
        </div>
        <div
          class="style={ flex: '1 0 300px' }
"
        >
          <div>
            <div>
              Mock JSON
            </div>
            <div />
          </div>
        </div>
      </div>
    </div>
    <div
      class="style={}
"
    />
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;
